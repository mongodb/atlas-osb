---
# Deployment to run the service broker.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 4000
          env:
            - name: ATLAS_BASE_URL
              value: {{ .Values.broker.deployment.atlasBaseURL | quote }}
            - name: REALM_BASE_URL
              value: {{ .Values.broker.deployment.realmBaseURL | quote }}
            - name: BROKER_HOST
              value: {{ .Values.broker.deployment.host | quote }}
            - name: BROKER_PORT
              value: {{ .Values.broker.deployment.port | quote }}
            - name: BROKER_OSB_SERVICE_NAME
              value: {{ .Values.broker.deployment.serviceName | quote }}
            - name: BROKER_APIKEYS
              value: "/etc/data/keys/apikeys.json"
            - name: ATLAS_BROKER_TEMPLATEDIR
              value: "/etc/data/plans"
          volumeMounts:
            - name: apikeys
              mountPath: "/etc/data/keys"
            - name: plans
              mountPath: "/etc/data/plans"
      volumes:
        - name: apikeys
          secret:
            secretName: {{ .Release.Name }}-auth
        - name: plans
          configMap:
            name: plans

---
# Service to expose the service broker inside the cluster.
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    # Will match pods deployed by the "atlas-service-broker" deployment.
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 4000
