#demo: Deploy test application

on:
  workflow_dispatch:
    input:
      namespace:
        description: "k8s Namespace"
        required: false
      service_name:
        description: "Service instance name"
        required: false

name: K8s Demo.

jobs:
  k8s-demo-test:
    name: Deploy test application
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Deploy test application
        with:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: ${{ github.event.inputs.namespace }}
          SERVICE: ${{ github.event.inputs.service_name }}
        run: |
          set -e
          ./.github/base-dockerfile/helpers/install_k8s_helm.sh
          source ".github/base-dockerfile/helpers/params.sh"

          #prepare env
          echo "$INPUT_KUBE_CONFIG_DATA" >> ./kube.config
          export KUBECONFIG="./kube.config"

          helm install "${K_TEST_APP}" samples/helm/test-app/ \
            --set service.name="${K_SERVICE}" \
            --namespace "${K_NAMESPACE}" --wait --timeout 60m

          kubectl get all -n "${K_NAMESPACE}"

          #print summary info
          app_url=$(kubectl get services -n "${K_NAMESPACE}" | awk '/'"${K_TEST_APP}"'/{print $4":"$5}' | awk -F':' '{print $1":"$2}')
          echo "====================================================================="
          echo "namespace: ${K_NAMESPACE}"
          echo "test-app: http://${app_url}"

          #EKS
          data='{"_class":"org.cloudfoundry.samples.music.domain.Album", "artist": "Tenno", "title": "Journey", "releaseYear": "2019", "genre": "chillhop" }'
          curl -H "Content-Type: application/json" -X PUT \
              -d  "${data}" "${app_url}/albums"
          result=$(curl -X GET "${app_url}/albums" -s | awk '/Tenno/{print "true"}')
          echo "====================================================================="
          echo "${result}"
