# atlas-osb
# e2e VMware TAS
# An end-to-end deployment of atlas-osb to a Pivotal pie environment.

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

name: e2e VMware TAS

env:
  BRANCH: ${{ github.event.ref }}
  TYPE: ${{ github.event.ref_type }}

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.32

          # Optional: working directory, useful for monorepos
          # working-directory:

          args: --timeout 10m
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run ShellCheck
        uses: bewuethr/shellcheck-action@v2

  gotest:
    name: CF tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        plan: ["override-bind-db-plan", "multiregion-override-bind-db-plan"]
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Cleanup ENV for current branch
        uses: ./.github/actions/clean-failed
        with:
          cf_url: ${{ secrets.CF_URL }}
          cf_user: ${{ secrets.CF_USER }}
          cf_password: ${{ secrets.CF_PASSWORD }}
        env:
          TEST_TYPE: "go"

      - name: Mask CF
        id: mask
        uses: ./.github/actions/prepare-gotest
        with:
          cf_url: ${{ secrets.CF_URL }}
          cf_user: ${{ secrets.CF_USER }}
          cf_password: ${{ secrets.CF_PASSWORD }}

      - name: Create CF org, space, broker, service and push app
        id: gotest
        uses: ./.github/actions/gotest
        with:
          cf_url: ${{ secrets.CF_URL }}
          cf_user: ${{ secrets.CF_USER }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          atlas_public_key: ${{ secrets.ATLAS_PUBLIC_KEY }}
          atlas_private_key: ${{ secrets.ATLAS_PRIVATE_KEY }}
          atlas_org_id: ${{ secrets.ATLAS_ORG_ID }}
        env:
          TEST_PLAN: ${{ matrix.plan }}
          TEST_TYPE: "go"

      - name: Upload operator logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: test/cfe2e/output/**
